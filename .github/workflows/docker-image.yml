name: Build and Push Docker Images

on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Run commands inside Docker laravel container and execute tests
      - name: Execute commands in laravel container
        run: |
          docker run --rm \
            -v ${{ github.workspace }}/src:/var/www/html \
            -w /var/www/html \
            --user root \
            revelasquez76226637/laravel:latest \
            sh -c '
              ls -la &&  # Listar archivos para verificar la existencia de .env.example
              if [ -f .env.example ]; then
                cp .env.example .env &&
                chmod 777 .env &&
                composer install &&
                php artisan key:generate &&
                php artisan migrate --force &&
                ./vendor/bin/phpunit
              else
                echo ".env.example file not found" && exit 1
              fi
            '

      - name: Run tests
        run: |
            docker run --rm \
            -v ${{ github.workspace }}/src:/var/www/html \
            -w /var/www/html \
            --user root \
            revelasquez76226637/laravel:latest \
            php artisan test \
            ./vendor/bin/pest --init

        
      # Build and push server image
      - name: Build and push server image
        if: success()  # Asegura que este paso se ejecute solo si el paso anterior tuvo éxito
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./dockerfiles/nginx.dockerfile
          push: true
          tags: revelasquez76226637/server:latest

      # Build and push laravel image
      - name: Build and push laravel image
        if: success()  # Asegura que este paso se ejecute solo si el paso anterior tuvo éxito
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./dockerfiles/laravel.dockerfile
          push: true
          tags: revelasquez76226637/laravel:latest
